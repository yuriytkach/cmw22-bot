package com.yuriytkach.batb.dr.stats;

import java.time.Month;
import java.util.Optional;

import org.eclipse.microprofile.rest.client.inject.RestClient;

import com.yuriytkach.batb.common.ai.AiServiceType;
import com.yuriytkach.batb.common.ai.LambdaInvoker;
import com.yuriytkach.batb.common.secret.SecretsReader;
import com.yuriytkach.batb.common.telega.TelegramBotNotificationType;
import com.yuriytkach.batb.common.telega.TelegramBotSendMessageRequest;
import com.yuriytkach.batb.dr.AiLambdaConfig;

import jakarta.enterprise.context.ApplicationScoped;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@ApplicationScoped
@RequiredArgsConstructor
class DonationStatsNotificationService {

  private final SecretsReader secretsReader;
  private final TelegramBotConfig telegramBotConfig;

  private final LambdaInvoker lambdaInvoker;
  private final AiLambdaConfig aiLambdaConfig;

  @RestClient
  private final TelegramBotApi telegramBotApi;

  void notifyForStats(
    final DonationStats amountStats,
    final DonationStats countStats,
    final int totalTxes,
    final Month month,
    final boolean readOnly
  ) {
    final String finalMsg = buildStatsMessage(amountStats, countStats, totalTxes);
    log.debug("Stats message: {}", finalMsg);

    if (readOnly) {
      log.info("Read-only mode, no notifications sent");
    } else {
      sendNotification(finalMsg, month);
    }
  }

  private String buildStatsMessage(
    final DonationStats amountStats,
    final DonationStats countStats,
    final int totalTxes
  ) {
    return """
      üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ–Ω–∞—Ç—ñ–≤ –∑–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –º—ñ—Å—è—Ü—å*:
      
      üí∞ *–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –¥–æ–Ω–∞—Ç—ñ–≤:* %,.2f –≥—Ä–Ω
      #Ô∏è‚É£ *–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π:* %d
      üèÜ *–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π –¥–æ–Ω–∞—Ç:* %,.2f –≥—Ä–Ω
      ü™ô *–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –¥–æ–Ω–∞—Ç:* %,.2f –≥—Ä–Ω
      
      üìà *–ú–µ–¥—ñ–∞–Ω–∞:* %,.2f (—Ç–æ–±—Ç–æ 50%% –¥–æ–Ω–∞—Ç—ñ–≤ –±—ñ–ª—å—à–∞ –∑–∞ —Ü—é —Å—É–º—É)
      üìâ *p10:* %,.2f (—Ç–æ–±—Ç–æ 10%% –¥–æ–Ω–∞—Ç—ñ–≤ –º–µ–Ω—à–µ –∞–±–æ —Ä—ñ–≤–Ω—ñ —Ü—ñ–π —Å—É–º—ñ)
      ü•á *p90:* %,.2f (—Ç–æ–±—Ç–æ 10%% –¥–æ–Ω–∞—Ç—ñ–≤ –±—ñ–ª—å—à–µ –∞–±–æ —Ä—ñ–≤–Ω—ñ —Ü—ñ–π —Å—É–º—ñ)
      
      ‚ñ∂Ô∏è‚ñ∂Ô∏è‚ñ∂Ô∏è
      
      üï∫ *–ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–æ–Ω–∞—Ç—ñ–≤ –≤—ñ–¥ –æ–¥–Ω—ñ—î—ó –æ—Å–æ–±–∏* (—Å–µ—Ä–µ–¥ —Ç–∏—Ö, –¥–µ –≤–¥–∞–ª–æ—Å—å –≤–∏–∑–Ω–∞—á–∏—Ç–∏ —ó–º º—è):
      
      üë• *–£–Ω—ñ–∫–∞–ª—å–Ω—ñ –¥–æ–Ω–∞—Ç–µ—Ä–∏:* %d
      üîù *–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–æ–Ω–∞—Ç—ñ–≤ –≤—ñ–¥ –æ–¥–Ω—ñ—î—ó –æ—Å–æ–±–∏:* %d
      üîΩ *–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞:* %d
      
      üìà *–ú–µ–¥—ñ–∞–Ω–∞:* %.0f (—Ç–æ–±—Ç–æ 50%% –¥–æ–Ω–∞—Ç–∏–ª–∏ —Å—Ç—ñ–ª—å–∫–∏ –∞–±–æ –±—ñ–ª—å—à–µ —Ä–∞–∑—ñ–≤)
      ü•á *p90:* %.0f (—Ç–æ–±—Ç–æ 10%% –¥–æ–Ω–∞—Ç–∏–ª–∏ —Å—Ç—ñ–ª—å–∫–∏ –∞–±–æ –±—ñ–ª—å—à–µ —Ä–∞–∑—ñ–≤)
      """.formatted(
      amountStats.total() / 100.0,
      totalTxes,
      amountStats.max() / 100.0,
      amountStats.min() / 100.0,
      amountStats.median() / 100.0,
      amountStats.p10() / 100.0,
      amountStats.p90() / 100.0,
      countStats.total(),
      countStats.max(),
      countStats.min(),
      countStats.median(),
      countStats.p90()
    );
  }

  private Optional<String> retrieveImageUrl(final Month month) {
    final String payload = month.name();

    try {
      return lambdaInvoker.invokeAiLambda(
        aiLambdaConfig.functionName(),
        AiServiceType.IMAGE_DONATION_STATS,
        payload
      ).map(imgUrl -> imgUrl.substring(1, imgUrl.length()-1));
    } catch (final Exception ex) {
      log.error("Failed to retrieve image URL for donation stats: {}", ex.getMessage());
      return Optional.empty();
    }
  }

  private void sendNotification(final String message, final Month month) {
    secretsReader.readSecret(telegramBotConfig.secretName()).ifPresent(secret -> {

      final Optional<String> imageUrl = retrieveImageUrl(month);

      log.info("Sending donation stats notification to Telegram bot with image: {}", imageUrl);
      telegramBotApi.sendMessage(
        secret,
        new TelegramBotSendMessageRequest(
          TelegramBotNotificationType.DONATION_STATS,
          message,
          imageUrl.orElse(null)
        )
      );
    });
  }
}
